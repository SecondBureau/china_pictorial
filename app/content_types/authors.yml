# Human readable name of this type
name: Authors
slug: authors
description: Writers
label_field_name: name
order_by: manually

# Valid values: asc (ascending) and desc (descending). Set to asc by default.
# order_direction: asc

# Specify a field slug to group entries by that field in the back-office.
# group_by: <your field>

# Activate public 'create' API (e.g for a contact form)
# public_submission_enabled: false

# Array of emails to be notified of new entries made with the public API
# public_submission_accounts: ['john@example.com']

# A list describing each field
fields: 
- name: # The lowercase, underscored name of the field
    label: Name # Human readable name of the field
    type: string
    required: true
    hint: Explanatory text displayed in the back office
    localized: false
    
- bio: # The lowercase, underscored name of the field
    label: Biography # Human readable name of the field
    type: text
    required: true
    hint: A short story of the author
    localized: false
    
- profile_pic: # The lowercase, underscored name of the field
    label: Profile Picture # Human readable name of the field
    type: file
    required: false
    hint: An image of the author
    localized: false

- posts:
    label: Posts
    type: has_many
    required: false
    localized: false    # Define the slug of the target content type (eg. comments)
    class_name: posts
    # Define the name of the field referring to Categories in the target content type (eg. post)
    inverse_of: author
    # If you want to manage the entries of the relationship directly from the source entry
    ui_enabled: false
